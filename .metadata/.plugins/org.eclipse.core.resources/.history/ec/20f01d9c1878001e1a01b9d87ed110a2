package jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class MiHombreSanti {

    private static final String[] nombres = { "Pedro Sánchez", "Alberto Núñez Feijóo", "Santiago Abascal", "Yolanda Díaz" };
    private static final int[] edades = { 50, 60, 45, 45 };
    private static final String[] estudios = { "Licenciatura", "Licenciatura", "Licenciatura", "Doctorado" };

    public static void main(String[] args) throws SQLException {
        // Crea una conexión a la base de datos HSQLDB
        Connection connection = DriverManager.getConnection("jdbc:hsqldb:lider_partidos");

        // Crea la tabla LideresPartidos si no existe
        Statement statement = connection.createStatement();
        statement.executeUpdate(
                "CREATE TABLE IF NOT EXISTS LideresPartidos (nombre VARCHAR(255) PRIMARY KEY, edad INTEGER, estudios VARCHAR(255))");

        // Inserta las tuplas iniciales en la tabla
        for (int i = 0; i < 4; i++) {
            statement.executeUpdate("INSERT INTO LideresPartidos (nombre, edad, estudios) VALUES ('" + nombres[i]
                    + "', " + edades[i] + ", '" + estudios[i] + "')");
        }

        // Comprueba que la tabla se creó o existe correctamente
        ResultSet rs = statement.executeQuery("SELECT COUNT(*) FROM LideresPartidos");
        rs.next();
        int count = rs.getInt(1);
        if (count != 4) {
            throw new SQLException("Error al crear o recuperar la tabla LideresPartidos");
        }

        Scanner scanner = new Scanner(System.in);

        // Agregar nuevos miembros
        System.out.println("Añadir nuevos miembros:");
        System.out.print("Nombre: ");
        String nuevoNombre = scanner.nextLine();
        System.out.print("Edad: ");
        int nuevaEdad = Integer.parseInt(scanner.nextLine());
        System.out.print("Estudios: ");
        String nuevosEstudios = scanner.nextLine();

        statement.executeUpdate("INSERT INTO LideresPartidos (nombre, edad, estudios) VALUES ('" + nuevoNombre + "', "
                + nuevaEdad + ", '" + nuevosEstudios + "')");

        // Mostrar todos los miembros en la base de datos
        System.out.println("Miembros en la base de datos:");
        rs = statement.executeQuery("SELECT * FROM LideresPartidos");
        while (rs.next()) {
            String nombre = rs.getString("nombre");
            int edad = rs.getInt("edad");
            String estudios = rs.getString("estudios");
            System.out.println("Nombre: " + nombre + ", Edad: " + edad + ", Estudios: " + estudios);
        }

        // Cierra la conexión a la base de datos
        connection.close();
    }
}
